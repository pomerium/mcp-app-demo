/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { ServerRoute as ApiModelsServerRouteImport } from './routes/api/models'
import { ServerRoute as ApiContainerFileServerRouteImport } from './routes/api/container-file'
import { ServerRoute as ApiChatServerRouteImport } from './routes/api/chat'
import { ServerRoute as ApiBackgroundJobsServerRouteImport } from './routes/api/background-jobs'

const rootServerRouteImport = createServerRootRoute()

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ApiModelsServerRoute = ApiModelsServerRouteImport.update({
  id: '/api/models',
  path: '/api/models',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiContainerFileServerRoute = ApiContainerFileServerRouteImport.update({
  id: '/api/container-file',
  path: '/api/container-file',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiChatServerRoute = ApiChatServerRouteImport.update({
  id: '/api/chat',
  path: '/api/chat',
  getParentRoute: () => rootServerRouteImport,
} as any)
const ApiBackgroundJobsServerRoute = ApiBackgroundJobsServerRouteImport.update({
  id: '/api/background-jobs',
  path: '/api/background-jobs',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/'
  fileRoutesByTo: FileRoutesByTo
  to: '/'
  id: '__root__' | '/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
}
export interface FileServerRoutesByFullPath {
  '/api/background-jobs': typeof ApiBackgroundJobsServerRoute
  '/api/chat': typeof ApiChatServerRoute
  '/api/container-file': typeof ApiContainerFileServerRoute
  '/api/models': typeof ApiModelsServerRoute
}
export interface FileServerRoutesByTo {
  '/api/background-jobs': typeof ApiBackgroundJobsServerRoute
  '/api/chat': typeof ApiChatServerRoute
  '/api/container-file': typeof ApiContainerFileServerRoute
  '/api/models': typeof ApiModelsServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/background-jobs': typeof ApiBackgroundJobsServerRoute
  '/api/chat': typeof ApiChatServerRoute
  '/api/container-file': typeof ApiContainerFileServerRoute
  '/api/models': typeof ApiModelsServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths:
    | '/api/background-jobs'
    | '/api/chat'
    | '/api/container-file'
    | '/api/models'
  fileServerRoutesByTo: FileServerRoutesByTo
  to:
    | '/api/background-jobs'
    | '/api/chat'
    | '/api/container-file'
    | '/api/models'
  id:
    | '__root__'
    | '/api/background-jobs'
    | '/api/chat'
    | '/api/container-file'
    | '/api/models'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiBackgroundJobsServerRoute: typeof ApiBackgroundJobsServerRoute
  ApiChatServerRoute: typeof ApiChatServerRoute
  ApiContainerFileServerRoute: typeof ApiContainerFileServerRoute
  ApiModelsServerRoute: typeof ApiModelsServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/models': {
      id: '/api/models'
      path: '/api/models'
      fullPath: '/api/models'
      preLoaderRoute: typeof ApiModelsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/container-file': {
      id: '/api/container-file'
      path: '/api/container-file'
      fullPath: '/api/container-file'
      preLoaderRoute: typeof ApiContainerFileServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/chat': {
      id: '/api/chat'
      path: '/api/chat'
      fullPath: '/api/chat'
      preLoaderRoute: typeof ApiChatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
    '/api/background-jobs': {
      id: '/api/background-jobs'
      path: '/api/background-jobs'
      fullPath: '/api/background-jobs'
      preLoaderRoute: typeof ApiBackgroundJobsServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiBackgroundJobsServerRoute: ApiBackgroundJobsServerRoute,
  ApiChatServerRoute: ApiChatServerRoute,
  ApiContainerFileServerRoute: ApiContainerFileServerRoute,
  ApiModelsServerRoute: ApiModelsServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
